
@{
    ViewBag.Title = "Edit Bounty";
}

<div class="page-header">
    <h1>Bounty Title</h1>
    <input id="bountyTitle" class="bountyTitleInput" type="text" name="bountyTitle" placeholder="Enter a title for your bounty" value="@ViewData["BountyTitle"]"/>
</div>

<div class="row">
    <div class="col-md-8">
        <h1>Task</h1>
        <div class="quill-wrapper">
            <!-- Toolbar for Quill -->
            <div id="task-toolbar" class="toolbar">
                <!-- Add font size dropdown -->
                <select class="ql-size">
                    <option value="10px">Small</option>
                    <option value="13px" selected>Normal</option>
                    <option value="18px">Large</option>
                    <option value="32px">Huge</option>
                </select>
                <!-- Add buttons -->
                <button class="ql-bold"><b>B</b></button>
                <button class="ql-italic">I</button>
                <button class="ql-underline"><u>U</u></button>
            </div>
            <!-- Editor for Quill -->
            <div id="task-editor">
                <div><br></div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading" style="background-color: lightgray">
                <h3><b>Price</b></h3>
            </div>
            <div class="panel-body" style="text-align: center;">
                <font size="5">@ViewData["Price"]</font>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <h1>Code</h1>
        <div class="quill-wrapper" style="font-family:Courier New, Courier, monospace">
            <div id="code-editor" class="input-code-editor" style="width: 100%;">// Insert your code here!</div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="panel panel-default">
            <div class="panel-heading" style="background-color: lightgray">
                <h3><b>Due Date</b></h3>
            </div>
            <div class="panel-body" style="align-content:center; text-align: center">
                <font size="5">@ViewData["EndTime"]</font>
            </div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading" style="background-color: lightgray">
                <h3><b>Tags</b></h3>
            </div>
            <div class="panel-body" style="align-content:center">
                <input id="bountyTags" class="bountyPriceInput" type="text" placeholder="Write tags separated by commas" value="@ViewData["Tags"]"/>
            </div>
        </div>
        <!---<div class="panel panel-default">
            <div class="panel-heading" style="background-color: lightgray">
                <h3><b>Difficulty</b></h3>
            </div>
            <div class="panel-body" style="align-content:center">
                <select id="bountyDifficulty">
                    <option value="Easy">Easy</option>
                    <option value="Medium">Medium</option>
                    <option value="Hard">Hard</option>
                </select>
            </div>
        </div>-->
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <div class="find-bounty-container">
            <a id="submitBounty" class="btn btn-success post-bounty-button">Done</a>
        </div>
    </div>
</div>

<script langauge="javascript">

    $(document).ready(function () {

        // Set up code editor
        var codeEditor = ace.edit("code-editor");
        codeEditor.getSession().setMode("ace/mode/c_cpp");
        document.getElementById('code-editor').style.fontSize = '16px';
        codeEditor.getSession().setValue('@Html.Raw(ViewData["Code"])');
        codeEditor.getSession().setUseWrapMode(true);
        codeEditor.setOptions({
            minLines: 10,
            maxLines: Infinity
        });

        // Set up task editor
        var taskEditor = new Quill('#task-editor', {
            modules: {
                'toolbar': { container: '#task-toolbar' }
            },
            theme: 'snow'
        });
        taskEditor.setHTML('@Html.Raw(ViewData["Task"])');

        function submitBounty() {
            // Get all the info

            var bountyTitle = $('#bountyTitle').val();
            var bountyTask = taskEditor.getHTML();
            var bountyTags = $('#bountyTags').val().split(',');
            var bountyCode = codeEditor.getSession().getValue();
            // Need to add dummy value for background because it is still part of model
            var bountyBackground = "";
            // Need to add dummy value for difficulty because it is still part of model
            var bountyDifficulty = "Hard";
            // Store it in a JSON object
            var bounty = {
                'Id': '@ViewData["Id"]',
                'Title': bountyTitle,
                'Background': bountyBackground,
                'Task': bountyTask,
                'Tags': bountyTags,
                'Price': '@ViewData["Price"]',
                'Code': bountyCode,
                'EndTime': '@ViewData["EndTime"]',
                'Difficulty': bountyDifficulty
            }

            // Send an AJAX query to the controller
            $.ajax({
                url: '../api/EditBountyApi',
                type: 'POST',
                data: JSON.stringify(bounty),
                dataType: 'json',
                contentType: 'application/json',
                success: function (response) {
                    console.log('Web Api Responds with:', response);
                },
                error: function (exception) {
                    alert('Exeption:' + exception);
                }
            });

            // Redirect to Profile
            alert("You've succesfully edited a bounty!")

            window.location.replace('../Profile');
        }

        $('#submitBounty').click(function () {
            submitBounty();
        });


    });
</script>
